#!/bin/sh

function usage() {
    echo morseping 0.1.0 \(c\) 2018 by Matt Conz
    echo
    echo Syntax: `basename $0` HOST \"message\"
    echo
    echo Continually sends a message string using Morse code via ping\(8\) to the specified host/target.
    echo
}

if [ $# -gt 2 ]; then
    usage
    echo "Make sure your message is enclosed in quotes!"
    exit 1
elif [ $# -lt 2 ]; then
    usage
    exit 1
fi

host="$1"
message="$2"
dot_time="0.25"
dash_time="0.5"
letter_time="0.5"
space_time="0.75" #added to letter_time

# Start of Message and initial check

ping -c 1 -q -p 0f "$host" > /dev/null

if [ $? -ne 0 ]; then
    echo "Host $host unreachable!"
    echo "exiting..."
    exit 2
fi

function dot() {
    sleep $dot_time
    ping -c 1 -q -a -p 0 "$host" > /dev/null
    echo "•\c"
    printf '\a'
#    sleep $dot_time
}

function dash() {
    sleep $dash_time
    ping -c 1 -q -a -p ff "$host" > /dev/null
    echo "–\c"
    printf '\a'
    sleep $dash_time
}


# Message

echo "Sending message to $host..."

for (( i=0; i<${#message}; i++ )); do
    case ${message:$i:1} in 
	a) dot; dash;;
	b) dash; dot; dot;;
	c) dash; dot; dash; dot;;
	d) dash; dot; dot;;
	e) dot;;
	f) dot; dot; dash; dot;;
	g) dash; dash; dot;;
	h) dot; dot; dot; dot;;
	i) dot; dot;;
	j) dot; dash; dash; dash;;
	k) dash; dot; dash;;
	l) dot; dash; dot; dot;;
	m) dash; dash;;
	n) dash; dot;;
	o) dash; dash; dash;;
	p) dot; dash; dash; dot;;
	q) dash; dash; dot; dash;;
	r) dot; dash; dot;;
	s) dot; dot; dot;;
	t) dash;;
	u) dot; dot; dash;;
	v) dot; dot; dot; dash;;
	w) dot; dash; dash;;
	x) dash; dot; dot; dash;;
	y) dash; dot; dash; dash;;
	z) dash; dash; dot; dot;;
	\ ) echo "\c"; sleep $space_time;;
	0) dash; dash; dash; dash; dash;;
	1) dot; dash; dash; dash; dash;;
	2) dot; dot; dash; dash; dash;;
	3) dot; dot; dot; dash; dash;;
	4) dot; dot; dot; dot; dash;;
	5) dot; dot; dot; dot; dot;;
	6) dash; dot; dot; dot; dot;;
	7) dash; dash; dot; dot; dot;;
	8) dash; dash; dash; dot; dot;;
	9) dash; dash; dash; dash; dot;;
	.) dot; dash; dot; dash; dot; dash;;
	,) dash; dash; dot; dot; dash; dash;;
	?) dot; dot; dash; dash; dot; dot;;
	’) dot; dash; dash; dash; dash; dot;;
	!) dash; dot; dash; dot; dash; dash;;
	/) dash; dot; dot; dash; dot;;
	\() dash; dot; dash; dash; dot;;
	\)) dash; dot; dash; dash; dot; dash;;
	\&) dot; dash; dot; dot; dot;;
	:) dash; dash; dash; dot; dot; dot;;
	\;) dash; dot; dash; dot; dash; dot;;
	=) dash; dot; dot; dot; dash;;
	+) dot; dash; dot; dash; dot;;
	-) dash; dot; dot; dot; dot; dash;;
	_) dot; dot; dash; dash; dot; dash;;
	\") dot; dash; dot; dot; dash; dot;;
	\$) dot; dot; dot; dash; dot; dot; dash;;
	@) dot; dash; dash; dot; dash; dot;;
	*) dot; dot; dot; dot; dot; dot; dot; dot;;
    esac
    echo "/\c"
    sleep $letter_time
done

#End of Message signal

echo
ping -c 1 -q -p 0f "$host" > /dev/null
echo "Message Sent!"
exit 0
